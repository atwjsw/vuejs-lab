vuejs入门基础

- http://www.imooc.com/learn/694
- 本课程主要讲解了vuejs 是如何站在前端巨人肩膀上，进行新项目的搭建，并通过一个简单的todolist讲解vuejs基本用法和常用接口。

- 轻量级的MVVM框架
- 吸收了React和AngularJS的优点
- 轻松实现展现和数据分离，吸收了anlguar指令和页面操作的特点


- Vue.js 的目标是通过尽可能简单的 API 实现响应的数据绑定和组合的视图组件。
- 数据绑定
- 组合的视图组件

- Vue.js 的核心是一个允许你采用简洁的模板语法来声明式的将数据渲染进 DOM 的系统


-《让Sublime支持.vue文件办法》
在Sublime里面调出package control,搜索"Vue Syntax Highlight",安装。
稍等片刻，重新打开文件，即可发现高亮，并且右下角不再是讨厌的"plain text",而是"vue component"。

- v-bind:title="message"
将这个元素节点的 title 属性和 Vue 实例的 message 属性绑定到一起。

- v-bind 属性被称为指令。指令带有前缀 v-，以表示它们是 Vue.js 提供的特殊属性。

- 不仅可以绑定 DOM 文本到数据，也可以绑定 DOM 结构到数据

- Vue.js 也提供一个强大的过渡效果系统，可以在 Vue 插入/删除元素时自动应用过渡效果

- v-for 指令可以绑定数据到数组来渲染一个列表

- 没有接触 DOM 的情况下更新了应用的状态 - 所有的 DOM 操作都由 Vue 来处理，你写的代码只需要关注基本逻辑。

- v-model 指令，它使得在表单输入和应用状态中做双向数据绑定变得非常轻巧。

- 在 Vue 里，一个组件实质上是一个拥有预定义选项的一个 Vue 实例：

- 在一个大型应用中，为了使得开发过程可控，有必要将应用整体分割成一个个的组件。

<div id="app">
  <app-nav></app-nav>
  <app-view>
    <app-sidebar></app-sidebar>
    <app-content></app-content>
  </app-view>
</div>

- 在实例化 Vue 时，需要传入一个选项对象，它可以包含数据、模板、挂载元素、方法、生命周期钩子等选项。

- 在底层的实现上， Vue 将模板编译成虚拟 DOM 渲染函数。结合响应系统，在应用状态改变时， Vue 能够智能地计算出重新渲染组件的最小代价并应用到 DOM 操作上。

- 对于所有的数据绑定， Vue.js 都提供了完全的 JavaScript 表达式支持。{{ number + 1 }}

- 大部分浏览器支持自定义HTML标签和为标准标签自定义属性，而且很多浏览器对这两种自定义行为的支持都很直接了当。